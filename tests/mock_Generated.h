// This code was generated by gtgen 0.0.1
#pragma once

#include <gmock/gmock.h>
#include "testdata/MockGenerate.h"

class Mockfoo {
  MOCK_CONST_METHOD0(const_function, void());
  MOCK_CONST_METHOD0(noise_suffix, void());
  MOCK_METHOD0(virtual_function, void());
  MOCK_CONST_METHOD0(pure_virtual, void());
  MOCK_METHOD0(with_definition, void());
  MOCK_METHOD0(public_function, void());
  MOCK_METHOD1(overload, int(int));
  MOCK_METHOD1(overload, int(double));
  MOCK_CONST_METHOD1(overload, int(int));
};
class Mockbar : public foo<int> {
  MOCK_METHOD0(virtual_function, void());
  MOCK_CONST_METHOD0(pure_virtual, void());
};
class Mockbaz {
  MOCK_METHOD0(struct_function, void());
};
class Mockfizz {
class Mockbuzz {
  MOCK_METHOD0(inner_class_func, void());
};
};
namespace n3 {
namespace n3_1 {
class Mockfizz {
class Mockbuzz {
  MOCK_METHOD0(inner_class_func, void());
};
};
};
class Mockfizz {
class Mockbuzz {
  MOCK_METHOD0(inner_class_func, void());
};
};
};

